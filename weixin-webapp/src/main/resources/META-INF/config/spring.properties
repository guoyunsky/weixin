#==============================datasource==============================
#父数据源
#数据库驱动
parentDataSource.driverClassName=com.mysql.jdbc.Driver
#(int)最大活动连接:连接池在同一时间能够分配的最大活动连接的数量,如果设置为非正数则表示不限制,默认值为100
parentDataSource.maxActive=100
#(int)初始化连接:连接池启动时创建的初始化连接数量,1.2 版本后支持,默认值10
parentDataSource.initialSize=10
#(int)最小空闲连接:连接池中容许保持空闲状态的最小连接数量,低于这个数量将创建新的连接,
#如果设置为0则不创建,如果连接验证失败将缩小这个值（ 参考testWhileIdle） 
parentDataSource.minIdle=10
#(int)最大等待时间:当没有可用连接时,连接池等待连接被归还的最大时间(以毫秒计数),
#超过时间则抛出异常,如果设置为-1 表示无限等待,默认值30000
parentDataSource.maxWait=30000
#(boolean)指明是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个.
#注意:设置为true后如果要生效,validationQuery参数必须设置为非空字符串,参考validationInterval以获得更有效的验证 
parentDataSource.testOnBorrow=true
#(String)SQL查询,用来验证从连接池取出的连接,在将连接返回给调用者之前.
#如果指定,则查询必须是一个SQL SELECT并且必须返回至少一行记录,查询不必返回记录，但这样将不能抛出SQL异常 
parentDataSource.validationQuery=select 1
#(long)避免过度验证,保证验证不超过这个频率——以毫秒为单位.如果一个连接应该被验证,但上次验证未达到指定间隔,将不再次验证。
parentDataSource.validationInterval=30000
#(boolean)标记是否删除泄露的连接,如果他们超过了removeAbandonedTimout的限制.
#如果设置为true,连接被认为是被泄露并且可以被删除,如果空闲时间超过removeAbandonedTimeout.
#设置为true可以为写法糟糕的没有关闭连接的程序修复数据库连接.参考logAbandoned
parentDataSource.removeAbandoned=true
#(int)泄露的连接可以被删除的超时值, 单位秒,这个值应该设为应用中查询执行最长的时间,默认值60
parentDataSource.removeAbandonedTimeout=300
#(String)(jdbc拦截器——jdbc-pool的高级扩展属性)用分号分隔的、继承org.apache.tomcat.jdbc.pool.JdbcInterceptor的类名列表。
#这些拦截器将被插入到对java.sql.Connection操作之前的拦截器链上。
#预制的拦截器有：
#org.apache.tomcat.jdbc.pool.interceptor.ConnectionState-追踪自动提交、只读状态、catalog和事务隔离等级等状态
#org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer-追踪打开的statement，当连接被归还时关闭它们
#更多预制拦截器详细描述请参见JDBC拦截器部分。
parentDataSource.jdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState;org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer
#多数据源连接参数
#====================主数据库====================
#连接url
dataSource0.url=jdbc:mysql://localhost:3306/portal?useUnicode=true&characterEncoding=UTF-8
#数据库的用户名
dataSource0.username=root
#数据库的密码
dataSource0.password=123456
#==============================sessionFactory==============================
#hibernate映射文件配置
sessionFactory.packagesToScan=com.kenanai.weixin.entity
#是否格式化sql语句
sessionFactory.hibernate.format_sql=true
#是否打印sql语句
sessionFactory.hibernate.show_sql=true
#Hibernate方言（Dialect）的类名-可以让Hibernate使用某些特定的数据库平台的特性
sessionFactory.hibernate.dialect=com.juncsoft.framework.adapter.hibernate.dialect.MySQLDialectAdapter
#指定Hibernate在何时释放JDBC连接. auto将为JTA和CMT事务策略选择after_statement,为JDBC事务策略选择after_transaction
sessionFactory.hibernate.connection.release_mode=auto
#允许Hibernate使用JDBC2的批量更新. 取值 建议取5到30之间的值
sessionFactory.hibernate.jdbc.batch_size=50
#指定JDBC抓取数量的大小 (调用Statement.setFetchSize())
sessionFactory.hibernate.jdbc.fetch_size=50
#让JDBC驱动从executeBatch()返回正确的行计数 (开启这个选项通常是安全的)_同时，Hibernate将为自动版本化的数据使用批量DML. 默认值为false
sessionFactory.hibernate.jdbc.batch_versioned_data=true
#在JDBC读写binary (二进制)或serializable (可序列化) 的类型时使用流(stream)(系统级属性)
sessionFactory.hibernate.jdbc.use_streams_for_binary=true
#缓存提供商
sessionFactory.hibernate.cache.provider_class=org.hibernate.cache.EhCacheProvider
#是否启用二级缓存
sessionFactory.hibernate.cache.use_second_level_cache=false
#是否启用查询缓存
sessionFactory.hibernate.cache.use_query_cache=false